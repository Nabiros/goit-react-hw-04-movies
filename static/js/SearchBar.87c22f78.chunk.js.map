{"version":3,"sources":["Views/SearchBarPage.js","services/ApiService.js","components/HomePage/HomePage.module.css"],"names":["SearchBarPage","lazy","MoviesPage","url","useRouteMatch","history","useHistory","location","useLocation","useState","movies","setMovies","page","setPage","searchMovie","setSearchMovie","searchQuery","URLSearchParams","search","get","useEffect","moviesApi","then","data","results","length","toast","error","prevMovies","showButton","className","styled","div","onSubmit","push","textAlign","ul","map","movie","li","link","to","pathname","string","title","id","slugify","lower","state","from","label","src","poster_path","alt","img","p","onClick","prevPage","button","fetchMovies","a","config","axios","response","moviesTrending","moviesSearch","movieInfo","movieId","movieCast","movieReviews","defaults","baseURL","params","api_key","module","exports"],"mappings":"8SAcMA,EAAgBC,gBAAK,kBACzB,iCAMa,SAASC,IAAc,IAAD,EAC3BC,EAAQC,cAARD,IACFE,EAAUC,cACVC,EAAWC,cACjB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACMC,EAAW,UAAG,IAAIC,gBAAgBV,EAASW,QAAQC,IAAI,gBAA5C,QAAwD,GAEzEC,qBAAU,WACHJ,GACLK,IAAuBL,EAAaJ,GAAMU,MAAK,SAACC,GAC9C,OAA4B,IAAxBA,EAAKC,QAAQC,OACRC,IAAMC,MAAN,yCAC6Bb,EAD7B,SAELH,EAAU,KAGVY,EAAKC,QACAb,GAAU,SAACiB,GAAD,4BAAoBA,GAApB,YAAmCL,EAAKC,kBAD3D,OAID,CAACR,EAAaJ,EAAME,IAEvB,IAWMe,EAAanB,EAAOe,QAAU,GACpC,OACE,sBAAKK,UAAWC,IAAOC,IAAvB,UACE,cAAChC,EAAD,CAAeiC,SAdM,SAACnB,GACxBH,EAAU,IACVI,EAAeD,GACfD,EAAQ,GACRR,EAAQ6B,KAAR,2BAAkB3B,GAAlB,IAA4BW,OAAO,SAAD,OAAWJ,SAW1CJ,GACC,eAAC,IAAD,CAAWyB,UAAU,SAArB,UACE,oBAAIL,UAAWC,IAAOK,GAAtB,SACG1B,EAAO2B,KAAI,SAACC,GAAD,OACV,oBAAmBR,UAAWC,IAAOQ,GAArC,SACE,eAAC,IAAD,CACET,UAAWC,IAAOS,KAClBC,GAAI,CACFC,SAAS,GAAD,OAAKvC,EAAL,aAjDVwC,EAiD+B,GAAD,OACvBL,EAAMM,MADiB,YACRN,EAAMO,IAlDjBC,IAAQH,EAAQ,CAAEI,OAAO,MAoDlCC,MAAO,CACLC,KAAM,CACJ1C,WACA2C,MAAO,wBACPhC,OAAO,UAAD,OAAYJ,MAV1B,UAeE,qBACEqC,IAAG,0CAAqCb,EAAMc,aAC9CC,IAAKf,EAAMM,MACXd,UAAWC,IAAOuB,MAEpB,mBAAGxB,UAAWC,IAAOwB,EAArB,SAAyBjB,EAAMM,YArB1BN,EAAMO,IA7CZ,IAACF,OAuEPd,GACC,wBAAQ2B,QAvCW,WAC3B3C,GAAQ,SAAC4C,GAAD,OAAcA,EAAW,MAsCc3B,UAAWC,IAAO2B,OAAzD,0BAMN,cAAC,IAAD,S,iQCzFSC,I,2EAAf,4CAAAC,EAAA,6DAA2BzD,EAA3B,+BAAiC,GAAI0D,EAArC,+BAA8C,GAA9C,SACyBC,IAAM3C,IAAIhB,EAAK0D,GADxC,cACQE,EADR,yBAESA,EAASxC,MAFlB,2C,wBAKO,SAASyC,IACd,OAAOL,EAAY,uBAGd,SAASM,EAAanD,EAAaF,GACxC,OAAO+C,EAAY,uBAAD,OAAwB7C,EAAxB,iBAA4CF,IAGzD,SAASsD,EAAUC,GACxB,OAAOR,EAAY,SAAD,OAAUQ,IAGvB,SAASC,EAAUD,GACxB,OAAOR,EAAY,SAAD,OAAUQ,EAAV,aAGb,SAASE,EAAaF,GAC3B,OAAOR,EAAY,SAAD,OAAUQ,EAAV,aA5BpBL,IAAMQ,SAASC,QAAU,gCAEzBT,IAAMQ,SAASE,OAAS,CACtBC,QAAS,qC,mBCJXC,EAAOC,QAAU,CAAC,IAAM,sBAAsB,EAAI,oBAAoB,GAAK,qBAAqB,GAAK,qBAAqB,GAAK,qBAAqB,IAAM,sBAAsB,EAAI,oBAAoB,KAAO,uBAAuB,OAAS,yBAAyB,OAAS","file":"static/js/SearchBar.87c22f78.chunk.js","sourcesContent":["import { Container } from \"semantic-ui-react\";\nimport { useState, useEffect, lazy } from \"react\";\nimport * as moviesApi from \"../services/ApiService\";\nimport {\n  useHistory,\n  useLocation,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport slugify from \"slugify\";\n\nimport toast, { Toaster } from \"react-hot-toast\";\nimport styled from \"../components/HomePage/HomePage.module.css\";\n\nconst SearchBarPage = lazy(() =>\n  import(\n    \"../components/SearchBar/SearchBar\" /* webpackChunkName: \"SearchBarPage\"  */\n  )\n);\nconst makeSlug = (string) => slugify(string, { lower: true });\n\nexport default function MoviesPage() {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchMovie, setSearchMovie] = useState(\"\");\n  const searchQuery = new URLSearchParams(location.search).get(\"query\") ?? \"\";\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    moviesApi.moviesSearch(searchQuery, page).then((data) => {\n      if (data.results.length === 0) {\n        return toast.error(\n          `Sorry there are no movies with ${searchMovie} name`,\n          setMovies([])\n        );\n      }\n      if (data.results) {\n        return setMovies((prevMovies) => [...prevMovies, ...data.results]);\n      }\n    });\n  }, [searchQuery, page, searchMovie]);\n\n  const handleFormSubmit = (searchMovie) => {\n    setMovies([]);\n    setSearchMovie(searchMovie);\n    setPage(1);\n    history.push({ ...location, search: `query=${searchMovie}` });\n  };\n\n  const handleButtonLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const showButton = movies.length >= 20;\n  return (\n    <div className={styled.div}>\n      <SearchBarPage onSubmit={handleFormSubmit} />\n      {movies && (\n        <Container textAlign=\"center\">\n          <ul className={styled.ul}>\n            {movies.map((movie) => (\n              <li key={movie.id} className={styled.li}>\n                <NavLink\n                  className={styled.link}\n                  to={{\n                    pathname: `${url}/${makeSlug(\n                      `${movie.title} ${movie.id}`\n                    )}`,\n                    state: {\n                      from: {\n                        location,\n                        label: \"Back to search movies\",\n                        search: `?query=${searchMovie}`,\n                      },\n                    },\n                  }}\n                >\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.title}\n                    className={styled.img}\n                  />\n                  <p className={styled.p}>{movie.title}</p>\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n          {showButton && (\n            <button onClick={handleButtonLoadMore} className={styled.button}>\n              Load more\n            </button>\n          )}\n        </Container>\n      )}\n      <Toaster />\n    </div>\n  );\n}\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\naxios.defaults.params = {\n  api_key: \"98821d28938ee5f201a6b9b7afe95fef\",\n};\n\nasync function fetchMovies(url = \"\", config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function moviesTrending() {\n  return fetchMovies(`trending/movie/day?`);\n}\n\nexport function moviesSearch(searchMovie, page) {\n  return fetchMovies(`search/movie?&query=${searchMovie}&page=${page}`);\n}\n\nexport function movieInfo(movieId) {\n  return fetchMovies(`movie/${movieId}`);\n}\n\nexport function movieCast(movieId) {\n  return fetchMovies(`movie/${movieId}/credits`);\n}\n\nexport function movieReviews(movieId) {\n  return fetchMovies(`movie/${movieId}/reviews`);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"HomePage_div__2g-Cu\",\"a\":\"HomePage_a__2UTqM\",\"h1\":\"HomePage_h1__1xCte\",\"ul\":\"HomePage_ul__1t0Px\",\"li\":\"HomePage_li__3RQGn\",\"img\":\"HomePage_img__aTo2w\",\"p\":\"HomePage_p__3iEWT\",\"link\":\"HomePage_link__2b6sM\",\"button\":\"HomePage_button__VpscM\",\"loader\":\"HomePage_loader__16JlK\"};"],"sourceRoot":""}